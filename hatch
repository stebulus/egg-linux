#!/bin/bash
set -euo pipefail
here=$(dirname "${BASH_SOURCE[0]}")

if [ $# -ne 1 ]; then
  echo >&2 "usage: $0 outputdir"
  exit 1
fi
out=$1

stdenv=()

stdtool() {
  stdenv+=("$out/$1")
}

package() {
  local pkg start finish
  pkg=$1
  shift
  start=$(date -u +%s)
  "$here"/build "$out/$pkg" "$here/package/$pkg" \
    ${stdenv:+"${stdenv[@]}"} ${@:+"${@/#/$out/}"}
  finish=$(date -u +%s)
  echo "$((finish - start)) $pkg" >> "$out"/times
}

mkdir -p "$out"
date -Is >> "$out"/times

export PASS_PATH_THROUGH=x
package build-tools
package build-toolchain
unset PASS_PATH_THROUGH

stdtool build-tools

package make build-toolchain
stdtool make

package bad-cmp
package bad-diff bad-cmp
package mawk bad-cmp build-toolchain
package file bad-diff mawk build-toolchain
package xz bad-diff bad-cmp file mawk build-toolchain
package diffutils bad-cmp mawk xz build-toolchain
package gawk diffutils file mawk build-toolchain

stdtool xz
stdtool diffutils
stdtool gawk

package binutils-src
package bzip2 build-toolchain
package ed build-toolchain
package fake-wget
package gcc-src
package glibc-src
package gperf build-toolchain
package linux-src
package patch build-toolchain
package m4 patch build-toolchain
package ncurses-src
package perl build-toolchain
package which build-toolchain
package autoconf m4 perl build-toolchain
package automake autoconf perl build-toolchain
package bison m4 perl build-toolchain
package flex bison m4 build-toolchain
package help2man perl build-toolchain
package libtool m4 build-toolchain
package ncurses ncurses-src build-toolchain
package texinfo file perl build-toolchain
package bc ed texinfo build-toolchain
package toolchain-src \
  binutils-src gcc-src glibc-src linux-src ncurses-src
package crosstool-ng automake bison bzip2 fake-wget file flex gperf \
  help2man libtool m4 ncurses patch perl texinfo toolchain-src which \
  build-toolchain
package cross-toolchain crosstool-ng build-toolchain
package bash cross-toolchain build-toolchain
package binutils binutils-src cross-toolchain build-toolchain
package coreutils cross-toolchain
package findutils cross-toolchain
package gcc file gcc-src patch cross-toolchain build-toolchain
package grep cross-toolchain
package gzip cross-toolchain
package linux bc patch perl linux-src cross-toolchain build-toolchain
package mount cross-toolchain
package sed cross-toolchain
package tar cross-toolchain
package tree binutils coreutils cross-toolchain findutils gcc grep gzip \
  linux mount sed bash tar
package checksums tree

sha256sum "$out"/checksums/sha256sums
